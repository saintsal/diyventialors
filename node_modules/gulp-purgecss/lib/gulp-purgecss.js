"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var through=_interopDefault(require("through2")),PluginError=_interopDefault(require("plugin-error")),glob=_interopDefault(require("glob")),PurgeCSS=_interopDefault(require("purgecss"));const PLUGIN_NAME="gulp-purgecss";function getFiles(e){return e.reduce((e,r)=>[...e,...glob.sync(r)],[])}function gulpPurgeCSS(e){return through.obj((async function(r,t,n){if(r.isNull())return n(null,r);if(r.isBuffer())try{const t={...e,content:getFiles(e.content),css:[{raw:r.contents.toString()}],stdin:!0},u=(await(new PurgeCSS).purge(t))[0],o=t.rejected&&u.rejected?u.rejected.join(" {}\n")+" {}":u.css;r.contents=Buffer.from(o,"utf-8"),n(null,r)}catch(e){this.emit("error",new PluginError(PLUGIN_NAME,e.message))}if(r.isStream()){const t=r;let u="";t.on("readable",e=>{u+=e.read().toString()}).on("end",async()=>{try{const o={...e,css:[u]},i=(await(new PurgeCSS).purge(o))[0],s=o.rejected&&i.rejected?i.rejected.join(" {}\n")+" {}":i.css;t.contents=Buffer.from(s,"utf-8"),n(null,r)}catch(e){this.emit("error",new PluginError(PLUGIN_NAME,e.message))}})}}))}module.exports=gulpPurgeCSS;
